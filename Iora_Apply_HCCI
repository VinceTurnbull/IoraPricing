CREATE TABLE IF NOT EXISTS "testdb"."vt_sample_claimants_IoraPilot_members"  AS
with iora_members as(

select member_ssn
from testdb.iora_patient_cohort),

claims_sample as(
select *
from analytics_dw.medical_claims
where member_ssn in (select member_ssn from iora_members)
and service_from_date between date '2021-01-01' and  date '2021-06-30'
),


/********** Svc Assignment ******************/
-- Fix errors with service type field
-- professional logic also assigns all J codes to professional and for some reason it looks like DRGs are getting mapped to prof
fix_service_type as (
  select a.*
   , (case when (a.procedure_code between 'J0000' and 'J9999') then 'Professional Services'
       when (a.drg not in ('', ' ') and drg is not NULL) then 'Inpatient Facility' 
      else a.service_type end ) as major_service_category
  from claims_sample a),
    
sample_data as (  
SELECT *
FROM fix_service_type) ,

/********************************** Inpatient *****************************/

-- initial map of IP Fac based on Code
map_IP_Fac as(
  
  select a.*
  , (case when a.pos in ('31','32','33') then 'SNF'
     when a.pos in ('34') then 'Hospice'
     else b.hcci_detailed_service_class end) as IP_DSC
  , b.mdc_grouping as DRG_MDC_grouping
  , b.description as DRG_MDC_description
  from sample_data a
  left join "testdb"."servicemapping_drgs" b
  on a.drg = b.drg
),

-- clean up IP fac not labeled usually for DRG 999, ungroupable drgs

Final_map_IP_Fac as(
  
  select a.*
 , (case when (a.major_service_category = 'Inpatient Facility' and (IP_DSC in('', ' ') or IP_DSC is null)) then 'Medical'
  else IP_DSC end) as final_IP_DSC
  from map_IP_Fac a
),

/********************************** Professional *****************************/
-- add professional

Add_prof_service_cat as(
    select a.*
     ,  (case when a.major_service_category = 'Professional Services' 
             then b.subcategory else NULL end) as Prof_DSC
  from Final_map_IP_Fac a
  left join"testdb"."servicemapping_profprocs"  b
  on a.procedure_code = b.code),
  
-- clean up Prof not labeled (all codes not on the mapping)
Final_map_prof_service_cat as (

  select a.*
  , (case when (a.major_service_category = 'Professional Services' and (Prof_DSC in('', ' ') or Prof_DSC is null)) then 'Other'
     else Prof_DSC end) as final_Prof_DSC
     from Add_prof_service_cat a
     ),

/********************************** Outpatient *****************************/
-- Add OP facility 
 
Add_OP_Fac_Rev as (
    select a.*
  , (case when a.major_service_category = 'Outpatient Facility' then
     b.hcci_detailed_servicecategory else NULL end) as OP_DSC_rev
  
  , (case when a.major_service_category = 'Outpatient Facility' then
     b.subcategory else NULL end) as OP_Fac_subcategory_rev

  , (case when a.major_service_category = 'Outpatient Facility' then
     b.rank else NULL end) as OP_Fac_Rank_rev

  from Final_map_prof_service_cat a
  left join "testdb"."servicemapping_revcodes" b
  on a.revenue_code = b.rev_code),

-- HCCI OP fac mapping on proc codes
Add_OP_Fac_Proc as (
    select a.*
  , (case when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev not in('', ' ') or OP_DSC_rev is null)) then OP_DSC_rev
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.pos = '12') then 'Home Health' 
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.pos = '23') then 'Emergency Room' 
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.procedure_code in 
           (select code from "testdb"."servicemapping_opfac_proccodes" )) then b.detailed_service_category
     else 'Outpatient Other' end) as OP_DSC_proc
     
     
     
  , (case when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev not in('', ' ') or OP_DSC_rev is null)) then OP_Fac_subcategory_rev
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.pos = '12') then 'Other' 
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.pos = '23') then 'Visits' 
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.procedure_code in 
           (select code from "testdb"."servicemapping_opfac_proccodes" )) then b.subcategory
     else 'Other' end) as OP_Fac_subcategory_proc

     
  -- note, mapping "other" to last rank
  
  , (case when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev not in('', ' ') or OP_DSC_rev is null)) then OP_Fac_Rank_rev
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.pos = '12') then '9' 
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.pos = '23') then '1' 
     when (a.major_service_category = 'Outpatient Facility' and (OP_DSC_rev in('', ' ') or OP_DSC_rev is null) and a.procedure_code in 
           (select code from "testdb"."servicemapping_opfac_proccodes" )) then b.hierarchy
     else '10' end) as OP_Fac_hiearchy
  
  -- add unique key to join hierarchy back to
  , concat(member_ssn, cast(service_from_date as varchar)) as unique_key
    
  from Add_OP_Fac_Rev a
  left join "testdb"."servicemapping_opfac_proccodes" b
  on a.procedure_code = b.code),


-- OP Hierarchy
OP_Hierarchy as (
select * 
  , (case when Top_OP_Rank = 1 then 'Emergency Room'
  when Top_OP_Rank = 2 then 'Outpatient Surgery'
  when Top_OP_Rank = 3 then 'Observation'
  else NULL end) as Top_OP_DSC
  from (
select unique_key
, min(OP_Fac_hiearchy) over(Partition by unique_key) as Top_OP_Rank
from (
select member_ssn
,(case when major_service_category = 'Outpatient Facility' then OP_DSC_proc
 when major_service_category = 'Inpatient Facility' then final_IP_DSC
 else final_Prof_DSC end) as DSC_No_Hierarchy
, unique_key
, cast(OP_Fac_hiearchy as integer) as OP_Fac_hiearchy
from Add_OP_Fac_Proc 
where major_service_category = 'Outpatient Facility'
and OP_Fac_subcategory_proc = 'Visits'))
group by 1,2
),

-- edit the OP fac rank and DSC
add_edit_OP_fac_rank as(
select a.*
, (case when a.OP_Fac_hiearchy_edit is NULL then a.OP_Fac_hiearchy 
   else a.OP_Fac_hiearchy_edit end ) as OP_Fac_hiearchy_final

, (case when a.OP_Fac_DSC_edit is NULL then a.OP_DSC_proc
   else a.OP_Fac_DSC_edit end ) as OP_Fac_DSC_final

  
from (

select a.*
, (case when a.major_service_category = 'Outpatient Facility' then cast(b.Top_OP_Rank as varchar)
   else NULL end) as OP_Fac_hiearchy_edit

, (case when a.major_service_category = 'Outpatient Facility' then b.Top_OP_DSC 
   else NULL end) as OP_Fac_DSC_edit

    
from Add_OP_Fac_Proc a
left join OP_Hierarchy b 
on a.unique_key = b.unique_key) a),


  
-- Final DSC
map_Final_DSC as(
select a.* 

, (case when a.major_service_category = 'Outpatient Facility' then a.OP_DSC_proc
when a.major_service_category = 'Inpatient Facility' then a.final_IP_DSC
else a.final_Prof_DSC end) as DSC_No_Hierarchy
  
  
, (case when a.major_service_category = 'Outpatient Facility' then a.OP_Fac_DSC_final
when a.major_service_category = 'Inpatient Facility' then a.final_IP_DSC
else a.final_Prof_DSC end) as DSC_With_Hierarchy
  
from add_edit_OP_fac_rank a),


claims_table as (
  select platform_code
, product_id
, plan_id
, claim_id
, claim_line_id
, claim_line_suffix
, member_id
, member_key
, member_ssn
, member_age
, network_id
, network_flag
, revenue_code
, drg
, discharge_status
, referring_provider_key
, referring_provider_npi
, rendering_provider_key
, rendering_provider_npi
, billing_provider_npi
, pay_to_provider_npi
, attending_provider_npi
, operating_physician_provider_npi
, provider_tin
, facility_npi
, admitting_diagnosis_code
, diagnosis_code1
, diagnosis_code2
, diagnosis_code3
, diagnosis_code4
, diagnosis_code5
, diagnosis_code6
, diagnosis_code7
, diagnosis_code8
, diagnosis_code9
, diagnosis_code10
, icd_version
, bill_type
, procedure_code
, procedure_code_modifier
, hcpcs_cpt4_suffix_cd_1
, hcpcs_cpt4_type_cd_1
, procedure_code_modifier2
, procedure_code_modifier3
, procedure_code_modifier4
, pos
, ndc
, icd_procedure_code_1
, icd_procedure_code_2
, icd_procedure_code_3
, auth_number
, diagnosis_codes
, icd_procedure_codes
, cpt_modifier_codes
, admit_date
, discharge_date
, service_from_date
, service_to_date
, paid_date
, claim_received_date
, billed_amount
, allowed_amount
, member_amount
, paid_amount
, copay
, coinsurance
, deductible
, cob_amount
, units
, service_type
, lob
, is38states
, payor
, file_name
, run_date
, pal_category
, major_service_category
, drg_mdc_grouping
, drg_mdc_description
, op_fac_subcategory_proc
, op_fac_hiearchy_final
, dsc_no_hierarchy
, dsc_with_hierarchy
from map_Final_DSC),


/******************************* Add Utilization Count ********************************** /
/*****************Inpatient ********************/

-- Would like to revise to do without Admit_date in key
add_IP_key as (
select *
, (case when major_service_category = 'Inpatient Facility' then  concat(cast(admit_date as varchar), member_ssn, dsc_with_hierarchy) 
   else NULL end) as unique_key
from claims_table 
),


IP_Enc_Assignment as (
select unique_key
, sum(allowed_amount) as allowed 
, (case when (unique_key in ('',' ') or unique_key is NULL) then NULL
when sum(allowed_amount) > 0 then 1 
when sum(allowed_amount) < 0 then -1 
else 0 end) as IP_enc_assignment
from add_IP_key 
group by 1),


Rank_IP_Rows as (
select * 
, (row_number() over (partition by unique_key ORDER BY service_from_date asc) ) AS ENC_ROW_RANK
, (min(service_from_date) over (partition by unique_key ) ) AS COH_ADMIT_DATE
, (max(service_to_date) over (partition by unique_key ) ) AS COH_DISCHARGE_DATE
from add_IP_key
where major_service_category = 'Inpatient Facility'),



IP_add_Enc_Service_Counts as (
select a.*
, (case when b.IP_enc_assignment = 1 then 1
   when b.IP_enc_assignment = -1 then -1
   else 0 end ) as Service_Count
, (case when b.IP_enc_assignment = 1 then 1 else 0 end ) as Reversal_Flag
, (case when (a.Encounter_Count is not NULL and date_diff('day', a.COH_ADMIT_DATE ,a.COH_DISCHARGE_DATE ) = 0) then 1
   when (a.Encounter_Count is not NULL and date_diff('day', a.COH_ADMIT_DATE ,a.COH_DISCHARGE_DATE ) > 0) then date_diff('day', a.COH_ADMIT_DATE ,a.COH_DISCHARGE_DATE )
   else NULL end) as COH_DAYS
from (
select a.*
, b.IP_enc_assignment as Encounter_Count
from Rank_IP_Rows a
left join IP_Enc_Assignment b
on a.unique_key = b.unique_key
and a.ENC_ROW_RANK = 1) a
left join IP_Enc_Assignment b
on a.unique_key = b.unique_key ),


/*****************Outpatient ********************/
add_OP_key as (
select *
, (case when major_service_category = 'Outpatient Facility' then  concat(cast(service_from_date as varchar), member_ssn, provider_tin, dsc_with_hierarchy) 
   else NULL end) as unique_key
from claims_table 
),



OP_Enc_Assignment as (
select unique_key
, sum(allowed_amount) as allowed 
, (case when (unique_key in ('',' ') or unique_key is NULL) then NULL
when sum(allowed_amount) > 0 then 1 
when sum(allowed_amount) < 0 then -1 
else 0 end) as OP_enc_assignment
from add_OP_key 
group by 1),


Rank_OP_Rows as (
select * 
, (row_number() over (partition by unique_key ORDER BY service_from_date asc) ) AS ENC_ROW_RANK
, service_from_date AS COH_ADMIT_DATE
, service_to_date AS COH_DISCHARGE_DATE

from add_OP_key
where major_service_category = 'Outpatient Facility'),


OP_add_Enc_Service_Counts as (
select a.*
, (case when a.allowed_amount > 0 then 1
   when a.allowed_amount < 0 -1 then -1
   else 0 end ) as Service_Count
, (case when b.OP_enc_assignment = 1 then 1 else 0 end ) as Reversal_Flag
, NULL as COH_DAYS
from (

select a.*
, b.OP_enc_assignment as Encounter_Count
from Rank_OP_Rows a
left join OP_Enc_Assignment b
on a.unique_key = b.unique_key
and a.ENC_ROW_RANK = 1
-- and cast(a.op_fac_hiearchy_final as integer) <= 3
  ) a
left join OP_Enc_Assignment b
on a.unique_key = b.unique_key ),




/*****************Professional ********************/
add_Prof_key as (
select *
, (case when major_service_category = 'Professional Services' then  concat(cast(service_from_date as varchar), member_ssn, provider_tin, dsc_with_hierarchy) 
   else NULL end) as unique_key
from claims_table 
),


Prof_Enc_Assignment as (
select unique_key
, sum(allowed_amount) as allowed 
, (case when (unique_key in ('',' ') or unique_key is NULL) then NULL
when sum(allowed_amount) > 0 then 1 
when sum(allowed_amount) < 0 then -1 
else 0 end) as Prof_enc_assignment
from add_Prof_key 
group by 1),



Rank_Prof_Rows as (
select * 
, (row_number() over (partition by unique_key ORDER BY service_from_date asc) ) AS ENC_ROW_RANK
, service_from_date AS COH_ADMIT_DATE
, service_to_date AS COH_DISCHARGE_DATE

from add_Prof_key
where major_service_category = 'Professional Services'),



Prof_add_Enc_Service_Counts as (
select a.*
, (case when a.allowed_amount > 0 then 1
   when a.allowed_amount < 0 -1 then -1
   else 0 end ) as Service_Count
, (case when b.Prof_enc_assignment = 1 then 1 else 0 end ) as Reversal_Flag
, NULL as COH_DAYS  
from (

select a.*
, b.Prof_enc_assignment as Encounter_Count
from Rank_Prof_Rows a
left join Prof_Enc_Assignment b
on a.unique_key = b.unique_key
and a.ENC_ROW_RANK = 1
  ) a
left join Prof_Enc_Assignment b
on a.unique_key = b.unique_key ),

Combine_Tables as (
  select * from IP_add_Enc_Service_Counts
  UNION ALL

  select * from OP_add_Enc_Service_Counts
  UNION ALL
  
  select * from Prof_add_Enc_Service_Counts
)

select a.*
, (case when major_service_category = 'Professional Services' then a.Service_Count
   when major_service_category = 'Inpatient Facility' then a.Encounter_Count
   when (major_service_category =  'Outpatient Facility' and cast(a.op_fac_hiearchy_final as integer) <= 3) then a.Encounter_Count
   when (major_service_category =  'Outpatient Facility' and cast(a.op_fac_hiearchy_final as integer) > 3) then a.Service_Count
   else NULL end) as COH_FINAL_UTIL
from Combine_Tables a







